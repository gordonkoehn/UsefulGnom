name: Snakemake CI

on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11.2"]
        poetry-version: ["1.8.3"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:  
          virtualenvs-create: true
          virtualenvs-in-project: true
          version: ${{ matrix.poetry-version }}
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: Install the dependencies
        run: poetry install --no-interaction --no-root --with dev
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Install the module
        run: poetry install --with dev --no-interaction
        
      - name: Install Snakemake
        run: poetry run pip install snakemake

      # - name: Snakemake Linting
      #   run: |
      #     poetry run snakemake --lint -s workflows/Snakefile

      - name: Snakemake Testing
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: '.test'
          snakefile: 'workflow/Snakefile'
          args: '--cores 1 --use-conda --conda-cleanup-pkgs cache'
          stagein: '' # additional preliminary commands to run (can be multiline)
          show-disk-usage-on-error: true