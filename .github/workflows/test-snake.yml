name: Snakemake CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11.2"]
        poetry-version: ["1.8.3"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:  
          virtualenvs-create: true
          virtualenvs-in-project: true
          version: ${{ matrix.poetry-version }}
      - name: Install dependencies and package
        run: |
          poetry install --with dev --no-interaction
          poetry run pip install -e .
      
      - name: Debug Python environment
        run: |
          poetry run which python
          poetry run python --version
          poetry run pip list
          poetry run python -c "import sys; print(sys.path)"
          poetry run python -c "import usefulgnom; print(usefulgnom.__file__)"

      # - name: Snakemake Linting
      #   run: |
      #     poetry run snakemake --lint -s workflow/Snakefile

      - name: Snakemake Testing
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: '.test'
          snakefile: 'workflow/Snakefile'
          args: '--cores 1 --use-conda --conda-frontend mamba --conda-cleanup-pkgs cache'
          stagein: |
            source /home/runner/work/UsefulGnom/UsefulGnom/.venv/bin/activate
            export PYTHONPATH="${PYTHONPATH}:/github/workspace:/github/workspace/src"
            echo $PYTHONPATH
          show-disk-usage-on-error: true